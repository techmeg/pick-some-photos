{"version":3,"sources":["Context.js","components/Header.js","hooks/useHover.js","components/Image.js","pages/Photos.js","utils/index.js","components/CartItem.js","pages/Cart.js","App.js","index.js"],"names":["Context","React","createContext","ContextProvider","children","useState","allPhotos","setAllPhotos","cartItems","setCartItems","console","log","useEffect","localStorage","getItem","JSON","parse","fetch","then","res","json","data","Provider","value","toggleFavorite","id","updatedArray","map","photo","isFavorite","addToCart","newItem","prevCart","itemsSelected","push","setItem","stringify","addItemToStorage","removeFromCart","filteredCart","filter","item","filteredItems","removeItemFromStorage","emptyCart","emptyStorage","Header","cartClass","useContext","length","to","className","useHover","isHovered","setIsHovered","hoveredRef","useRef","enter","leave","ref","current","addEventListener","removeEventListener","Image","src","url","alt","onClick","some","Photos","imageElements","index","i","CartItem","iconClass","width","Cart","costDisplay","toLocaleString","style","currency","buttonText","setButtonText","cartItemElements","setTimeout","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f4f5fd0.chunk.js","sourcesContent":["import React,{useEffect, useState} from 'react'\n\nconst Context = React.createContext()\n\nfunction ContextProvider({children}) {\n    const [allPhotos, setAllPhotos] = useState([])\n    const [cartItems, setCartItems] = useState([])\n\n    // localStorage.clear()\n\n    function addToCart(newItem) {\n       setCartItems(prevCart => [...prevCart, newItem])\n       addItemToStorage(newItem)\n    }\n    console.log('cart items: ', cartItems)\n\n    function addItemToStorage(newItem) {\n        let itemsSelected;\n        if(localStorage.getItem('itemsSelected') === null){\n            itemsSelected = [];\n        } else {\n            itemsSelected = JSON.parse(localStorage.getItem('itemsSelected'))\n        }\n        itemsSelected.push(newItem);\n        localStorage.setItem('itemsSelected', JSON.stringify(itemsSelected));\n    }\n\n    function removeFromCart(id) {\n        const filteredCart = cartItems.filter(item => item.id !== id)\n        setCartItems(filteredCart)\n        removeItemFromStorage(id)\n    }\n\n    function removeItemFromStorage(id) {\n        let itemsSelected;\n        if(localStorage.getItem('itemsSelected') === null){\n            itemsSelected = [];\n        } else {\n            itemsSelected = JSON.parse(localStorage.getItem('itemsSelected'))\n        }\n        const filteredItems = itemsSelected.filter(item => item.id !== id)\n        localStorage.setItem('itemsSelected', JSON.stringify(filteredItems));\n    }\n\n    function emptyCart (){\n        setCartItems([])\n        emptyStorage()\n    }\n\n    function emptyStorage(){\n        let itemsSelected = JSON.parse(localStorage.getItem('itemsSelected'))\n        itemsSelected = []\n        localStorage.setItem('itemsSelected', JSON.stringify(itemsSelected));\n    }\n\n    function toggleFavorite(id){\n        const updatedArray = allPhotos.map(photo => {\n            if(photo.id === id) {\n                return {\n                    ...photo,\n                    isFavorite: !photo.isFavorite\n                } \n            } \n            return photo   \n        })\n        setAllPhotos(updatedArray)\n    }\n\n    useEffect(() => {\n        // get local storage data\n        if(localStorage.getItem('itemsSelected')){\n            setCartItems(JSON.parse(localStorage.getItem('itemsSelected')))\n        }\n\n        //get all photo data\n        const url = \"https://raw.githubusercontent.com/bobziroll/scrimba-react-bootcamp-images/master/images.json\"\n        fetch(url)\n            .then(res => res.json())\n            .then(data => setAllPhotos(data))         \n    }, [])\n    // console.log(allPhotos)\n        return (\n            <Context.Provider value={{allPhotos, cartItems, toggleFavorite, addToCart, removeFromCart, emptyCart}}>\n                {children}\n            </Context.Provider>\n        )\n\n}\n\nexport {ContextProvider, Context}\n","import {Link} from 'react-router-dom'\nimport {Context} from '../Context'\nimport {useContext} from 'react'\n\nfunction Header() {\n\n    const {cartItems} = useContext(Context)\n    const cartClass = (cartItems.length > 0) ? 'fill' : 'line'\n\n    return (\n        <header>\n            <Link to=\"/\">\n                <div className=\"logo\">Pic Some</div>\n            </Link>\n            <Link to=\"/cart\">\n                <i className={`ri-shopping-cart-${cartClass} ri-fw ri-2x`}></i>\n            </Link>\n        </header>\n    )\n}\n\nexport default Header","import {useState, useRef, useEffect} from 'react'\n\nfunction useHover() {\n    const [isHovered, setIsHovered] = useState(false)\n    const hoveredRef = useRef(null)\n\n    useEffect(() => {\n        const ref = hoveredRef.current\n        hoveredRef.current.addEventListener(\"mouseenter\", enter)\n        hoveredRef.current.addEventListener(\"mouseleave\", leave)\n\n        return () => {\n            ref.removeEventListener(\"mouseenter\", enter)\n            ref.removeEventListener(\"mouseleave\", leave)\n        }\n    }, [])\n\n    function enter () {\n        setIsHovered(true)\n    }\n    function leave() {\n        setIsHovered(false)\n    }\n\n    return[isHovered, hoveredRef]\n}\n\nexport default useHover","import {useState, useContext} from 'react'\nimport {Context} from '../Context'\nimport PropTypes from 'prop-types'\nimport useHover from '../hooks/useHover'\n\nfunction Image({className, photo}) {\n    // const [isHovered, setIsHovered] = useState(false)\n    const[isHovered, hoveredRef] = useHover()\n    const {toggleFavorite, addToCart, cartItems, removeFromCart} = useContext(Context)\n    \n    const heartIcon = () => {\n        if (photo.isFavorite) {\n            return <i className=\"ri-heart-fill favorite\"\n                      onClick={() => toggleFavorite(photo.id)}></i>\n        } else if (isHovered && !photo.isFavorite) {\n            return <i  className=\"ri-heart-line favorite\"\n                       onClick={() => toggleFavorite(photo.id)}></i>\n        } \n    }\n\n    const cartIcon = () => {\n        const alreadyInCart = cartItems.some(item => item.id === photo.id)\n        if(alreadyInCart) {\n            return  <i className=\"ri-add-circle-fill cart\"\n                        onClick={() => removeFromCart(photo.id)}></i>\n        } else if(isHovered) {\n            return <i className=\"ri-add-circle-line cart\"\n               onClick={() => addToCart(photo)}></i>\n        } \n    }\n\n    return (\n        <div ref={hoveredRef}\n            className={`${className} image-container`}\n        >\n            <img \n              src={photo.url} alt='' \n              className=\"image-grid\"\n              />\n            {heartIcon()}\n            {cartIcon()}\n            \n        </div>\n\n    )\n}\nImage.propTypes = {\n    className: PropTypes.string,\n    photo: PropTypes.shape({\n        url: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n        isFavorite: PropTypes.bool,\n    }),\n}\n\nexport default Image","import {useContext} from \"react\"\nimport {Context} from '../Context'\nimport Image from '../components/Image'\nimport {getClass} from \"../utils\"\n\nfunction Photos() {\n    const {allPhotos} = useContext(Context)\n    const imageElements = allPhotos.map((photo, index) => \n    <Image key={photo.id} photo={photo} className={getClass(index)} />)\n    return (\n        <main>\n            <div className=\"intro\">\n                <h1>A pho-tastic site for ordering and favoriting beautiful photos.</h1>\n                <p> Click on the heart icon to show some love as you hover over our photo selection. To order, simply click on the plus icon in the upper right corner to add images to your shopping cart.</p>\n            </div>\n            <div className=\"photos\">\n            {imageElements}\n            </div>\n        </main>\n    )\n}\n\nexport default Photos","export function getClass(i) {\n    if (i % 5 === 0) {\n        return 'big';\n    }\n    else if (i % 6 === 0) {\n        return 'wide'\n    }\n    else if (i % 4 === 0) {\n        return 'tall'\n    }\n}","import {useContext, useState} from 'react'\nimport {Context} from '../Context'\nimport PropTypes from 'prop-types'\nimport useHover from '../hooks/useHover'\n\nfunction CartItem ({item}) {\n    const {removeFromCart} = useContext(Context)\n    // const [isHovered, setIsHovered] = useState(false) // replaced by useHover hook\n    const[isHovered, hoveredRef] = useHover()\n\n    const iconClass = isHovered ? \"fill\" : \"line\"\n    return (\n        <div className=\"cart-item\">\n            <i className={`ri-delete-bin-${iconClass}`}\n                ref={hoveredRef}\n                onClick={() => removeFromCart(item.id)}></i>\n            <img src={item.url} alt=\"\"  width=\"130px\"/>\n            <p>$5.99</p>\n        </div>\n    )\n}\n\nCartItem.propTypes = {\n    item: PropTypes.shape({\n        url: PropTypes.string.isRequired\n    })\n}\n\nexport default CartItem","import React, {useContext, useState} from \"react\"\nimport {Context} from '../Context'\nimport CartItem from '../components/CartItem'\n\nfunction Cart() {\n    const {cartItems, emptyCart} = useContext(Context)\n    const totalCost = cartItems.length * 5.99\n    const costDisplay = totalCost.toLocaleString(\"en-US\", {style: \"currency\", currency: \"USD\"})\n    const [buttonText, setButtonText] = useState(\"Place Order\")\n\n    const cartItemElements = cartItems.map(item => (\n        <CartItem key={item.id} item={item} />\n    ))\n\n    function placeOrder() {\n        setButtonText(\"Ordering...\")\n        setTimeout(() => {\n            console.log(\"Order Placed\")\n            setButtonText('Place Orders')\n            emptyCart()\n        }, 3000);\n\n    }\n\n    return (\n        <main className=\"cart-page\">\n            <h1>Check out</h1>\n            {cartItemElements}\n            <p className=\"total-cost\">Total: {costDisplay}</p>\n            {\n                cartItems.length > 0 ?\n                <div className=\"order-button\">\n                    <button onClick={placeOrder}>{buttonText}</button> \n                </div> :\n                <p>You have no items in your cart.</p>\n            }\n\n        </main>\n    )\n}\n\nexport default Cart","import {Switch, Route} from 'react-router-dom'\n\nimport Header from './components/Header'\nimport Photos from './pages/Photos'\nimport Cart from './pages/Cart'\n\nfunction App() {\n\n  \n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <Photos />\n        </Route>\n        <Route path=\"/cart\">\n          <Cart />\n        </Route>\n\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {HashRouter as Router} from 'react-router-dom'\nimport App from './App'\nimport {ContextProvider} from './Context'\n\nReactDOM.render(\n  <ContextProvider>\n      <Router >\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </Router>\n  </ContextProvider>\n,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}